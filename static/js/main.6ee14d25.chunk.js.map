{"version":3,"sources":["components/Circles/Circles.jsx","components/CircleSelector/CircleSelector.jsx","App.js","reportWebVitals.js","index.js"],"names":["Circles","props","className","circleNo","map","circle","idx","selectedCircleIdx","CircleSelector","onClick","handleCircleSelection","App","state","newIdx","setState","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAkBeA,G,YAfC,SAACC,GACb,OACI,qBAAKC,UAAU,UAAf,SACID,EAAME,SAASC,KAAI,SAACC,EAAQC,GAAT,OACf,qBAEIJ,UAAWD,EAAMM,oBAAsBD,EAAM,WAAa,UAF9D,UAIKL,EAAMM,kBAAN,UAAqCD,EAAI,KAHrCD,UCcVG,G,MAnBQ,SAACP,GACpB,OACI,qBAAKC,UAAU,iBAAf,SACKD,EAAME,SAASC,KAAI,SAACC,EAAQC,GAAT,OAChB,wBAEIJ,UAAWD,EAAMM,oBAAsBD,EAAM,WAAa,GAC1DG,QAAS,kBAAMR,EAAMS,sBAAsBJ,IAH/C,SAKKL,EAAMM,oBAAsBD,EAA5B,iBAA4CA,EAAI,EAAhD,qCAAgFA,EAAI,IAJhFD,UCHnBF,EAAW,CAAC,IAAK,IAAK,IAAK,KAkClBQ,E,4MA/BbC,MAAQ,CACNL,kBAAmB,G,EAGpBG,sBAAwB,SAACG,GACvB,EAAKC,SAAS,CAAEP,kBAAmBM,K,uDAIpC,OACE,sBAAKX,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,qCAGA,iCACE,cAAC,EAAD,CACAQ,sBAAyBK,KAAKL,sBAC5BH,kBAAmBQ,KAAKH,MAAML,kBAC9BJ,SAAUA,IAEZ,cAAC,EAAD,CACCO,sBAAyBK,KAAKL,sBAC9BH,kBAAmBQ,KAAKH,MAAML,kBAC9BJ,SAAUA,c,GAxBHa,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6ee14d25.chunk.js","sourcesContent":["import React from 'react'\nimport './Circles.css'\n\nconst Circles = (props) => {\n    return ( \n        <div className=\"Circles\">\n           {props.circleNo.map((circle, idx) =>\n                <div\n                    key={circle}\n                    className={props.selectedCircleIdx === idx ? 'selected' : 'Circles'}\n                >\n                    {props.selectedCircleIdx === idx ? `${idx+1}` : `${idx+1}`}\n                </div> \n            )}\n            </div>\n     );\n}\n \nexport default Circles;","import React from 'react'\nimport './CircleSelector.css'\n\nconst CircleSelector = (props) => {\n    return ( \n        <div className=\"CircleSelector\">\n            {props.circleNo.map((circle, idx) =>\n                <button\n                    key={circle}\n                    className={props.selectedCircleIdx === idx ? 'selected' : ''}\n                    onClick={() => props.handleCircleSelection(idx)}\n                >\n                    {props.selectedCircleIdx === idx ? `Circle ${idx+1} selected` : `Select circle ${idx+1}`}\n                </button>\n            )}\n\n        </div>\n     );\n}\n \n\n\nexport default CircleSelector;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Circles from './components/Circles/Circles'\nimport CircleSelector from './components/CircleSelector/CircleSelector'\n\nconst circleNo = ['0', '1', '2', '3']\n\nclass App extends Component {\n  state = { \n    selectedCircleIdx: 0\n   }\n\n   handleCircleSelection = (newIdx) => {\n     this.setState({ selectedCircleIdx: newIdx })\n   }\n\n  render() { \n    return ( \n      <div className=\"App\">\n        <header className=\"App-header\">\n        UNIT 3 FINAL ASSESSMENT\n        </header>\n        <main>\n          <CircleSelector \n          handleCircleSelection = {this.handleCircleSelection}\n            selectedCircleIdx={this.state.selectedCircleIdx}\n            circleNo={circleNo}\n          />\n          <Circles \n           handleCircleSelection = {this.handleCircleSelection}\n           selectedCircleIdx={this.state.selectedCircleIdx}\n           circleNo={circleNo}\n          />\n        </main>\n      </div>\n     );\n  }\n}\n \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}